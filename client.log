     [java] 
     [java] ############################################################################################################
     [java] ### IntroSDE 2015 Assignment 3 
     [java] ### Author:  Daniel Bruzual
     [java] ###
     [java] ### WSDL URL: http://localhost:6903/ws/people?wsdl
     [java] ###
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  1]       Get all people in the database, along with their current health profile. Store the first.
     [java] #  Methods used:   readPersonList()
     [java] #  Method numbers: #1
     [java] #  Response: 
     [java] 
     [java]  -----------------------------------------------------------------------------------------------------------
     [java]     ID     First Name      Last Name      Birthdate       mType      mValue     Date Registered       mid
     [java]  -----------------------------------------------------------------------------------------------------------
     [java]      1          Pedro       Carrezna     01/01/1999      weight          63    01/12/2015 11:59      2254
     [java]      1          Pedro       Carrezna     01/01/1999      height         172    02/12/2015 12:00      2251
     [java]      1          Pedro       Carrezna     01/01/1999       steps        9892    01/12/2015 11:57      2253
     [java]      2        Gustaff          Broll     02/09/1978      weight          94    02/12/2015 12:57      2256
     [java]      3     Palincosin          Perez     02/09/1978       steps       15432    02/12/2015 12:54      2257
     [java]      4         Andrea          Smith     02/09/1982                                                      
     [java]      5          Pablo          Villa     01/11/1982                                                      
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  2]       Read the `first` person again.
     [java] #  Methods used:   readPerson(1)
     [java] #  Method numbers: #2
     [java] #  Response: 
     [java] 
     [java]  -----------------------------------------------------------------------------------------------------------
     [java]     ID     First Name      Last Name      Birthdate       mType      mValue     Date Registered       mid
     [java]  -----------------------------------------------------------------------------------------------------------
     [java]      1          Pedro       Carrezna     01/01/1999      weight          63    01/12/2015 11:59      2254
     [java]      1          Pedro       Carrezna     01/01/1999      height         172    02/12/2015 12:00      2251
     [java]      1          Pedro       Carrezna     01/01/1999       steps        9892    01/12/2015 11:57      2253
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  3]       Change the `first` person's name and birthdate and check it was updated.
     [java] #  Methods used:   updatePerson(Person<id: 1,firstname: ordeP, lastname: Carrezna, birthdate: 01/01/2000>)
     [java] #  Method numbers: #3
     [java] #  Response: 
     [java] 
     [java] Before:
     [java]  -------------------------------------------------------
     [java]     ID     First Name      Last Name      Birthdate
     [java]  -------------------------------------------------------
     [java]      1          Pedro       Carrezna     01/01/1999
     [java] 
     [java] After:
     [java]  -------------------------------------------------------
     [java]     ID     First Name      Last Name      Birthdate
     [java]  -------------------------------------------------------
     [java]      1          ordeP       Carrezna     01/01/2000
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  4]       Read all measure types.
     [java] #  Methods used:   readMeasureTypes()
     [java] #  Method numbers: #7
     [java] #  Response: 
     [java] 
     [java]  ----------------------------------
     [java]     Measure Type     Value Type
     [java]  ----------------------------------
     [java]           weight         Double
     [java]           height         Double
     [java]            steps        Integer
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  5]       Read measure history of all types for `first` person.
     [java] #  Methods used:   readPersonHistory(1, weight), readPersonHistory(1, height), readPersonHistory(1, steps)
     [java] #  Method numbers: #6
     [java] #  Response: 
     [java] 
     [java]  ----------------------------------------------------------------
     [java]    mid        Measure Type          Value     Date Registered
     [java]  ----------------------------------------------------------------
     [java]   2204              weight             65    02/12/2015 12:00
     [java]   2254              weight             63    01/12/2015 11:59
     [java] 
     [java]  ----------------------------------------------------------------
     [java]    mid        Measure Type          Value     Date Registered
     [java]  ----------------------------------------------------------------
     [java]   2251              height            172    02/12/2015 12:00
     [java] 
     [java]  ----------------------------------------------------------------
     [java]    mid        Measure Type          Value     Date Registered
     [java]  ----------------------------------------------------------------
     [java]   2253               steps           9892    01/12/2015 11:57
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  6]       Create person `Chuck Norris` with Health Profile.
     [java] #  Methods used:   createPerson(Person<firstname: Chuck, lastname: Norris, birthdate: 10/04/1940, currentHealth: Measure<type: steps, value: 166> >)
     [java] #  Method numbers: #4
     [java] #  Response: 
     [java] 
     [java]  -----------------------------------------------------------------------------------------------------------
     [java]     ID     First Name      Last Name      Birthdate       mType      mValue     Date Registered       mid
     [java]  -----------------------------------------------------------------------------------------------------------
     [java]   4257          Chuck         Norris     10/04/1940       steps         166    05/12/2015 10:47      3713
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  7]       Add a new measure for the newly created person (`Chuck Norris`).
     [java] #  Methods used:   savePersonMeasure(4257, Measure<type: weight, value: 68>)
     [java] #  Method numbers: #9
     [java] #  Response: 
     [java] 
     [java]  ----------------------------------------------------------------
     [java]    mid        Measure Type          Value     Date Registered
     [java]  ----------------------------------------------------------------
     [java]   3714              weight             68    05/12/2015 10:47
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  8]       Update the measure's value.
     [java] #  Methods used:   updatePersonMeasure(4257, Measure<mid: 3714, type: weight, value: 78>)
     [java] #  Method numbers: #10
     [java] #  Response: 
     [java] 
     [java]  ----------------------------------------------------------------
     [java]    mid        Measure Type          Value     Date Registered
     [java]  ----------------------------------------------------------------
     [java]   3714              weight             78    05/12/2015 10:47
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test  9]       Re-read the measure to make sure it was updated.
     [java] #  Methods used:   readPersonMeasure(4257, weight, 3714)
     [java] #  Method numbers: #8
     [java] #  Response: 
     [java] 
     [java]  ----------------------------------------------------------------
     [java]    mid        Measure Type          Value     Date Registered
     [java]  ----------------------------------------------------------------
     [java]   3714              weight             78    05/12/2015 12:00
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] #  [Test 10]       Delete `Chuck Norris`
     [java] #  Methods used:   deletePerson(4257), readPerson(4257) to confirm it was deleted
     [java] #  Method numbers: #5
     [java] #  Response: 
     [java] 
     [java] Deleting person...
     [java] 	Person deleted successfully
     [java] 
     [java] Double-checking that person is not in db...
     [java] 	Person with id `4257` could not be found.
     [java] 
     [java] 
     [java] ############################################################################################################
     [java] ### All tests done. Thanks for your time.
     [java] ############################################################################################################
